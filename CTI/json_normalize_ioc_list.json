{
  "name": "JSON Normalize IOC List",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "utils/normalize-ioc",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1f11732e-e022-494f-a9b8-91755230ac81",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -500,
        0
      ],
      "webhookId": "a08621ed-5d59-48fb-98f5-f02ac96c15b9"
    },
    {
      "parameters": {
        "jsCode": "// Accepts various shapes: { iocs: [...] } or raw array or object with fields\nconst body = $json.body;\nlet arr = [];\nif (Array.isArray(body)) arr = body;\nelse if (Array.isArray(body?.iocs)) arr = body.iocs;\nelse if (Array.isArray(body?.observables)) arr = body.observables;\nelse if (body?.ioc) arr = [body.ioc];\nelse if (body?.value) arr = [body.value];\n// Normalize to {type, value}\nconst isIp = v => /^\\d{1,3}(?:\\.\\d{1,3}){3}$/.test(v);\nconst isHash = v => /^[A-Fa-f0-9]{32}$/.test(v) || /^[A-Fa-f0-9]{40}$/.test(v) || /^[A-Fa-f0-9]{64}$/.test(v);\nconst isUrl = v => /^https?:\\/\\//i.test(v);\nconst isDomain = v => /^[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/.test(v) && !isIp(v);\nconst out = [];\nfor (const item of arr) {\n  const v = typeof item === 'string' ? item : (item.value || item.data || item.ioc || '');\n  if (!v) continue;\n  let type = 'other';\n  if (isIp(v)) type = 'ip';\n  else if (isHash(v)) type = 'hash';\n  else if (isUrl(v)) type = 'url';\n  else if (isDomain(v)) type = 'domain';\n  out.push({ type, value: v });\n}\n// Deduplicate\nconst unique = [];\nconst seen = new Set();\nfor (const i of out) {\n  const key = `${i.type}:${i.value.toLowerCase()}`;\n  if (!seen.has(key)) { seen.add(key); unique.push(i); }\n}\nreturn [{ json: { iocs: unique } }];\n"
      },
      "id": "79a8f174-3997-4bea-ae2d-0e7568a42594",
      "name": "Normalize IOCs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        0
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}",
        "options": {
          "responseCode": 200
        }
      },
      "id": "47daf311-4832-4ee3-ad51-3931fee867dc",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        100,
        0
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Normalize IOCs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize IOCs": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "meta": {}
}